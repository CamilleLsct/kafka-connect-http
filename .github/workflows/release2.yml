name: do a release
on:
  push:
    branches:
      - master
  release:
    types: [created]
jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - uses: actions/checkout@v3


      - name: Set up JDK 11 for ossrh
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'
          server-id: 'ossrh'
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: "${{ secrets.GPG_KEY }}"
          gpg-passphrase: MAVEN_GPG_PASSPHRASE

#      - name: get version from SNAPSHOT
#        id: snapshot-version
#        run: |
#          export SNAPSHOT_VERSION=$(mvn --no-transfer-progress help:evaluate -Dexpression=project.version -q -DforceStdout)
#          echo "SNAPSHOT_VERSION=$SNAPSHOT_VERSION" >> $GITHUB_OUTPUT
#
#      - name: get version from RELEASE
#        id: release-version
#        run: |
#          export RELEASE_VERSION=${SNAPSHOT_VERSION/-SNAPSHOT/}
#          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_OUTPUT
#        env:
#          SNAPSHOT_VERSION: ${{ steps.snapshot-version.outputs.SNAPSHOT_VERSION }}
#
#      - name: Update package to release version
#        run: mvn --no-transfer-progress versions:set -DnewVersion=${{ steps.release-version.outputs.RELEASE_VERSION }}
#
#      - name: build artifact
#        run: mvn --no-transfer-progress clean package

      - name: Configure Git user
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "clescot"



      - name: Publish to the Maven Central Repository via ossrh
        run: mvn -B release:prepare release:perform -e -PossrhDeploy --no-transfer-progress  -DskipTests  deploy
        env:
          MAVEN_USERNAME: "${{ secrets.OSSRH_USERNAME }}"
          MAVEN_PASSWORD: "${{ secrets.OSSRH_TOKEN }}"
          MAVEN_GPG_PASSPHRASE: "${{ secrets.GPG_PASSPHRASE }}"
          SIGN_KEY: "${{ secrets.GPG_KEY }}"
          SIGN_KEY_ID: "${{ secrets.GPG_KEY_ID }}"
          SIGN_KEY_PASS: "${{ secrets.GPG_PASSPHRASE }}"
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          MAVEN_OPTS: " -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn "

      - name: upload artifacts to github packages
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.release-version.outputs.RELEASE_VERSION }}
          artifacts: "kafka-connect-http-core/target/*.jar,kafka-connect-http-connectors/target/components/packages/*.zip"
          generateReleaseNotes: true
          token: ${{ secrets.GITHUB_TOKEN }}